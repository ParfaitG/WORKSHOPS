metra_ridership <- read.csv('/home/parfaitg/Documents/MISC/DATA/METRA/MetraRidership.csv')
metra_ridership
# LONG FORM WITH ARG
summary_list <- by(metra_ridership, metra_ridership$Rail_Line, function(sub) summary(sub))
# SHORT FORM WITHOUT ARG
summary_list <- by(metra_ridership, metra_ridership$Rail_Line, summary)
summary_list
unique_lines <- unique(metra_ridership$Rail_Line)
df_list <- vector('list', length = length(unique_lines))
names(df_list) <- unique_lines
for (line in unique_lines) {
tmp <- metra_ridership[metra_ridership$Rail_Line == line,]
df_list[[line]] <- tmp[sample(nrow(tmp)),]
}
level_lines <- levels(metra_ridership$Rail_Line)
df_list <- vector('list', length = length(level_lines))
names(df_list) <- unique_lines
for (line in level_lines) {
tmp <- metra_ridership[metra_ridership$Rail_Line == line,]
df_list[[line]] <- tmp[sample(nrow(tmp)),]
}
df_list <- lapply(split(metra_ridership, metra_ridership$Rail_Line), function(sub)
sub[sample(nrow(sub), 5),]
)
df_list <-  by(metra_ridership, metra_ridership$Rail_Line, function(sub) sub[sample(nrow(sub), 5),])
path <- '/home/parfaitg/Documents/MISC/DATA/METRA'
# ASSETS
metra_assets <- read.csv(paste0(path, '/MetraAssets.csv'), stringsAsFactors = FALSE)
metra_assets <- subset(metra_assets, Asset_Type=="Total Capital Assets, net")
# FUNDING
metra_funding <- read.csv(paste0(path, '/MetraFunding.csv'), stringsAsFactors = FALSE)
metra_funding <- setNames(aggregate(Amount ~ Year, metra_funding, sum), c("Year", "Funding"))
# REVENUES
metra_revenues <- read.csv(paste0(path, '/MetraRevenues.csv'), stringsAsFactors = FALSE)
metra_revenues <-subset(metra_revenues, (!is.na(Category) | Category != '') & (Revenue_Type=="Total revenues"))
# CHAIN MERGE
merge_df <- Reduce(function(x, y) merge(x, y, by="Year", all=TRUE),
list(metra_ridership, metra_assets, metra_funding, metra_revenues))
options(width=300)
vec_list <- by(merge_df, merge_df$Rail_Line, function(sub)  {
res <- t.test(sub$Rides, sub$Actual)
c(estimate = res$estimate, p_value = res$p.value)
})
do.call(rbind, vec_list)
vec_list <- by(merge_df, merge_df$Rail_Line, function(sub)  {
res <- cor.test(sub$Rides, sub$Funding)
c(estimate = res$estimate, p_value = res$p.value)
})
do.call(rbind, vec_list)
options(width=300)
vec_list <- by(merge_df, merge_df$Rail_Line, function(sub)  {
model <- lm(End_Balance ~ Rides, data = sub)
res <- summary(model)
p <- res$fstatistic
c(rides_coeff = res$coefficients[2,1],
rides_t_stat = res$coefficients[2,3],
intercept = res$coefficients[2,2],
r_sq = res$r.squared,
adj_r_sq = res$adj.r.squared,
f_stat = p[['value']],
p_value = unname(pf(p[1], p[2], p[3], lower.tail=FALSE))  )
})
do.call(rbind, vec_list)
sort_df <- with(metra_ridership, metra_ridership[order(Rail_Line, -Rides),])
df_list <- by(sort_df, sort_df$Rail_Line, function(sub) head(sub, 3))
top_metra <- do.call(rbind, unname(df_list))
top_metra
df_list <- by(metra_ridership, metra_ridership$Rail_Line, function(sub) sub[sample(nrow(sub), 5),])
random_metra <- do.call(rbind, unname(df_list))
random_metra
out <- by(metra_ridership, metra_ridership$Rail_Line, function(sub) {
fn <- paste0(path, "/", gsub("/", " ", sub$Rail_Line[1]), ".csv")
write.csv(sub, fn, row.names = FALSE)
})
options(scipen=5)
# USER-DEFINED METHOD
graph_fct <- function(sub) {
dat <- tapply(sub$Rides, sub$Year, sum)
bp <- barplot(dat, col=rainbow(11), ylim=range(pretty(c(0, dat))),
main=sub$Rail_Line[[1]], ylab="Rides", xlab="Year")
axis(1, at=bp, labels=2007:2017)
mtext('Source: Metra Financial Statements, 2008 - 2017 (Metrarail.com)', side=1, line=4, at=4, cex=0.75)
}
# RUN PLOTS BY GROUPS
plots <- by(metra_ridership, metra_ridership$Rail_Line, graph_fct)
par(mar=c(15,5,4,2))
with(subset(metra_ridership, Rail_Line != "Total passenger trips"), {
bp <- barplot(tapply(Rides, factor(Rail_Line), mean), col=rainbow(11), las=2, ylim=c(0, 20000), cex.main=1.5,
main="Annual Ridership By Metra Lines, 2007-2017", ylab="Rides (thousands)\n", xlab=NULL)
mtext('Source: Metra Financial Statements, 2008 - 2017 (Metrarail.com)', side=1, line=12, at=3, cex=0.75)
})
